npm init --yes
npm install koa koa-router --save
npm install art-template koa-art-template --save
npm install koa-bodyparser --save
npm install koa-static --save
npm install koa-session --save



一、Session 简单介绍
    session 是另一种记录客户状态的机制，不同的是Cookie 保存在客户端浏览器中，而session 保存在服务器上。

二、Session 的工作流程
    当浏览器访问服务器并发送第一次请求时，服务器端会创建一个session 对象，生 成一个类似于key,value 的键值对， 然后将key(cookie)返回到浏览器(客户)端，浏览
    器下次再访问时，携带key(cookie)，找到对应的session(value)。客户的信息都保存 在session 中

三、koa-session 的使用:
    1.安装express-session
        npm install koa-session --save
    2.引入express-session
        const session = require('koa-session');
    3.设置官方文档提供的中间件
        02_db.keys = ['some secret hurr'];
        const CONFIG = {
            key: 'koa:sess', //cookie key (default is koa:sess)
            maxAge: 86400000, // cookie 的过期时间maxAge in ms (default is 1 days)
            overwrite: true, //是否可以overwrite (默认default true)
            httpOnly: true, //cookie 是否只有服务器端可以访问httpOnly or not (default true)
            signed: true, //签名默认true
            rolling: false, //在每次请求时强行设置cookie，这将重置cookie 过期时间（默认：false）
            renew: false, //(boolean) renew session when session is nearly expired,
        };
        02_db.use(session(CONFIG, 02_db));
    4.使用
        设置值ctx.session.username = "张三";
        获取值ctx.session.username


四、Cookie 和Session 区别
    1、cookie 数据存放在客户的浏览器上，session 数据放在服务器上。
    2、cookie 不是很安全，别人可以分析存放在本地的COOKIE 并进行COOKIE 欺骗考虑到安全应当使用session。
    3、session 会在一定时间内保存在服务器上。当访问增多，会比较占用你服务器的性能考虑到减轻服务器性能方面，应当使用COOKIE。
    4、单个cookie 保存的数据不能超过4K，很多浏览器都限制一个站点最多保存20 个cookie。